.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_bandwidth_signals.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_bandwidth_signals.py:


==========================================
Generate a coupling between specific bands
==========================================

Alternativerly, you can create coupling not between centered frequences, but
between frequency bands. In this example, we illustrate a [5, 7]<->[60, 80]hz
coupling.



.. image:: /auto_examples/images/sphx_glr_plot_bandwidth_signals_001.png
    :class: sphx-glr-single-img





.. code-block:: default

    import numpy as np
    import matplotlib.pyplot as plt

    from tensorpac import Pac, pac_signals_tort

    data, time = pac_signals_tort(f_pha=[5, 7], f_amp=[60, 80], chi=0.5,
                                  n_epochs=10, noise=3., n_times=2000)


    p = Pac(idpac=(3, 1, 1), f_pha=(1, 15, 1, .2), f_amp=(40, 100, 5, 2),
            dcomplex='wavelet', width=6)
    pac = p.filterfit(1024, data, n_perm=10)

    plt.figure(figsize=(12, 9))
    p.comodulogram(pac.mean(-1), title=str(p), plotas='contour', ncontours=10,
                   cmap='plasma', vmin=0)
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  3.125 seconds)


.. _sphx_glr_download_auto_examples_plot_bandwidth_signals.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_bandwidth_signals.py <plot_bandwidth_signals.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_bandwidth_signals.ipynb <plot_bandwidth_signals.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
